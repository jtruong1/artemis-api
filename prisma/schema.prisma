generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  email       String       @unique
  name        String
  password    String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  monitors    Monitor[]
  statusPages StatusPage[]
}

model Monitor {
  id          Int          @id @default(autoincrement())
  user        User         @relation(fields: [userId], references: [id])
  userId      Int
  url         String
  label       String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  checks      Check[]
  statusPages StatusPage[]
}

model Check {
  id        Int        @id @default(autoincrement())
  monitor   Monitor    @relation(fields: [monitorId], references: [id], onDelete: Cascade)
  monitorId Int
  type      Type
  label     String
  status    Status     @default(pending)
  interval  Int
  enabled   Boolean    @default(true)
  metadata  Json?
  checkedAt DateTime?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  incidents Incident[]
}

model Incident {
  id         Int       @id @default(autoincrement())
  check      Check     @relation(fields: [checkId], references: [id], onDelete: Cascade)
  checkId    Int
  reason     String
  resolvedAt DateTime?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model StatusPage {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  slug      String    @unique
  monitors  Monitor[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

enum Type {
  uptime
  certificate
}

enum Status {
  pending
  up
  down
}
